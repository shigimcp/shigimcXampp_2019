const YPlaylist = {
    init(a) {
        this.url = `https://www.googleapis.com/youtube/v3/playlistItems?part=snippet&maxResults=50&playlistId=${a.playlist}&key=${a.apiKey}&callback=?`, this.container = a.container, this.shuffle = a.shuffle, this.fetch()
    },
    fetch() {
        const a = this;
        const b = $('<div class="placeholder"></div>');
        const c = $('<div class="carousel-container"><span class="prev controll"></span><div class="carousel-inner"><ul class="slider"></ul></div><span class="next controll"></span></div>');
        $.getJSON(a.url, d => {
            let e;
            let f;
            let g = "";
            let h = {};
            const i = d.items;
            for (a.shuffle && i.sort(() => .5 - Math.random()), $(a.container).append(b), $(b).html(() => {
                    const a = i[0].snippet.resourceId.videoId;
                    return `<iframe width="820" height="380" src="https://www.youtube.com/embed/${a}" frameborder="0" allowfullscreen></iframe><h2>${i[0].snippet.title}</h2>`
                }), e = 0, f = i.length; f > e; e += 1) h = {
                title: i[e].snippet.title,
                url: i[e].snippet.resourceId.videoId,
                thumb: i[e].snippet.thumbnails.medium.url,
                desc: i[e].snippet.description
            }, g += `<li><a href="https://www.youtube.com/watch?v=${h.url}" title="${h.title}"><img alt="${h.title}" src="${h.thumb}">`, g += '<span class="shadow"></span></a>', g += `<h2>${h.title}</h2>`, g += '<span class="spacer"></span>', g += `<p>${a.truncate(h.desc, 90)}</p>`, g += "</li>";
            $(a.container).append(c), $(g).appendTo(".slider"), $(".slider").find("li:first").addClass("current"), a.carousel(), a.view($(".slider li"))
        })
    },
    truncate(a, b) {
        let c;
        if (a.length > b) {
            for (b--, c = a.substr(b - 1, 1);
                " " !== c && b > 0;) b--, c = a.substr(b - 1, 1);
            c = a.substr(b - 2, 1), a = "," === c || ";" === c || ":" === c ? `${a.substr(0, b - 2)}...` : "." === c || "?" === c || "!" === c ? a.substr(0, b - 1) : `${a.substr(0, b - 1)}...`
        }
        return a
    },
    getId(a) {
        const b = /^.*(youtu.be\/|v\/|u\/\w\/|embed\/|watch\?v=)([^#\&\?]*).*/;
        const c = a.match(b);
        if (c && 11 === c[2].length) return c[2];
        throw new Error("Invalid video URL")
    },
    view(a) {
        const b = this;
        a.click(function(a) {
            a.preventDefault();
            const c = $(this).find("a").attr("href");
            const d = $(this).find("h2").text();
            $(this).hasClass("current") || ($(".slider li").removeClass("current"), $(this).addClass("current"), $(".placeholder iframe").attr({
                src: `https://www.youtube.com/embed/${b.getId(c)}?autoplay=1`
            }), $(".placeholder h2").html(d), $("html, body").animate({
                scrollTop: $(".placeholder").offset().top
            }, 1e3))
        })
    },
    carousel() {
        const a = $(".slider");
        const b = $(".slider li").outerWidth(!0);
        let c = 0;
        $(".slider li:first").before($(".slider li:last")), $(document.body).on("click", ".carousel-container .controll", function() {
            $(this).hasClass("next") ? (c = parseInt(a.css("left"), 10) - b, $(".slider:not(:animated)").animate({
                left: c
            }, 500, () => {
                $(".slider li:last").after($(".slider li:first")), $(".slider").css({
                    left: `-${b}px`
                })
            })) : (c = parseInt(a.css("left"), 10) + b, $(".slider:not(:animated)").animate({
                left: c
            }, 500, () => {
                $(".slider li:first").before($(".slider li:last")), $(".slider").css({
                    left: `-${b}px`
                })
            }))
        })
    }
};
